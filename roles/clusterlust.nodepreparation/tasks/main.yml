---
- name: Stop firewalld
  ansible.builtin.systemd:
    name: firewalld
    state: stopped
    enabled: false

- name: "Empower {{ cluster_admin }}"
  ansible.builtin.template:
    src: sudo.j2
    dest: /etc/sudoers.d/ansible
    owner: root
    group: root
    mode: '0444'
    validate: /usr/sbin/visudo -cf %s

- name: Disable requiretty
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: 'Defaults.*requiretty'
    line: 'Defaults !requiretty'
    state: present
    owner: root
    group: root
    mode: '0440'
    validate: /usr/sbin/visudo -cf %s

- name: Fix Timezone
  when:
    - localtime_stat.stat.islnk is defined and localtime_stat.stat.islnk
    - localtime_stat.stat.lnk_target == '/usr/share/zoneinfo/UTC'
  block:
    - name: Gather selinux facts
      ansible.builtin.setup:
        gather_subset: selinux

    - name: Put SELinux in permissive mode, logging actions that would be blocked.
      when: ansible_facts.selinux.status == 'enabled'
      ansible.posix.selinux:
        policy: targeted
        state: permissive

    - name: Set ntp_timezone
      community.general.timezone:
        name: "{{ ntp_timezone | d('Europe/Amsterdam') }}"

    - name: Re-enable SELinux
      when: ansible_facts.selinux.status == 'enabled'
      ansible.posix.selinux:
        policy: targeted
        state: enforcing

- name: Proxy dnf
  when: http_proxy is defined
  ansible.builtin.lineinfile:
    path: /etc/dnf/dnf.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - regexp: '^proxy='
      line: "proxy={{ http_proxy | default('') }}"
