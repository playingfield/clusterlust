- name: "Ensure add-on state present: {{ item.addon_name }}"
  when: item.state == 'present'
  ansible.builtin.command: "kbcli --kubeconfig={{ k8s_auth_kubeconfig }} addon install {{ item.addon_name }} --version {{ item.version }}"
  register: addon_state
  changed_when: "'AlreadyExists' not in addon_state.stderr"
  failed_when:
    - addon_state.rc != '0'
    - "'AlreadyExists' not in addon_state.stderr"
    - "'installed successfully' not in addon_state.stdout"
  ignore_errors: true

- name: "Ensure add-on enablement: {{ item.addon_name }}."
  when:
    - item.state == 'present'
    - not addon_state.changed | bool
  ansible.builtin.command: "kbcli --kubeconfig={{ k8s_auth_kubeconfig }} addon {{ 'enable' if item.enabled else 'disable' }} {{ item.addon_name }}"
  register: addon_enablement
  failed_when:
    - addon_enablement.rc != '0'
    - "'enabled' not in addon_enablement.stdout"
    - "'disabled' not in addon_enablement.stdout"
    - "'already disabled' not in addon_enablement.stdout"
    - "'no change' not in addon_enablement.stdout"
    - "'not being updated' not in addon_enablement.stdout"
  changed_when:
    - "'enabled' in addon_enablement.stdout"
    - "'disabled' in addon_enablement.stdout"
    - "'already disabled' not in addon_enablement.stdout"
    - "'no change' not in addon_enablement.stdout"
    - "'not being updated' not in addon_enablement.stdout"

- name: "Ensure add-on state absent: {{ item.addon_name }}"
  when: item.state == 'absent'
  ansible.builtin.command: "kbcli --kubeconfig={{ k8s_auth_kubeconfig }} addon uninstall {{ item.addon_name }}"
  register: item_state
  failed_when: false
  ignore_errors: true
  changed_when: false
