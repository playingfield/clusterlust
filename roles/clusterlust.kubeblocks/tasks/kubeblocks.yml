---
# ~/.kube/config should be valid

- name: Configure KubeBlocks
  when: desired_state == 'present'
  block:
    - name: Create temp dir
      ansible.builtin.tempfile:
        state: directory
        suffix: temp
      register: tempdir

    - name: Download the manifest
      ansible.builtin.get_url:
        url: "{{ crd_url }}"
        dest: "{{ tempdir.path }}/{{ crd_manifest }}"
        mode: '0664'

    - name: Create dependent CRDs
      kubernetes.core.k8s:
        state: present
        src: "{{ tempdir.path }}/{{ crd_manifest }}"
        namespace: kube-system

    - name: Remove the temp dir
      when: tempdir.path is defined
      ansible.builtin.file:
        path: "{{ tempdir.path }}"
        state: absent

    - name: Add the KubeBlocks Helm repository
      kubernetes.core.helm_repository:
        binary_path: "{{ helm_binary }}"
        name: "{{ helm_repo_name }}"
        url: "{{ helm_repo_url }}"
        state: present

- name: Remove KubeBlocks
  when: desired_state == 'absent'
  ansible.builtin.command: >
    kbcli --kubeconfig={{ k8s_auth_kubeconfig }} kubeblocks uninstall -n kb-system
       --auto-approve=true
  changed_when: true

- name: Manage the Helm chart
  kubernetes.core.helm:
    binary_path: "{{ helm_binary }}"
    name: "{{ helm_chart_name }}"
    chart_ref: "{{ helm_repo_name }}/{{ helm_chart_name }}"
    release_namespace: "{{ namespace }}"
    create_namespace: true
    state: "{{ desired_state }}"
    wait: true

- name: Remove KubeBlocks Helm repository
  when: desired_state == 'absent'
  kubernetes.core.helm_repository:
    binary_path: "{{ helm_binary }}"
    name: "{{ helm_repo_name }}"
    state: absent

- name: Remove KubeBlocks crds
  when: desired_state == 'absent'
  ansible.builtin.shell: |
    set -o pipefail;
    kubectl --kubeconfig={{ k8s_auth_kubeconfig }} get crd -o name \
    | grep kubeblocks.io \
    | xargs kubectl --kubeconfig={{ k8s_auth_kubeconfig }} delete
  changed_when: true
  failed_when: false  # for example rc 123 is empty list as inputs
