#!/usr/bin/env ansible-playbook
---

- name: Configure Semaphore
  hosts: semaphore
  tags: [config]
  gather_facts: true

  tasks:

    - name: Stat kubectl
      run_once: true
      ansible.builtin.stat:
        path: /usr/bin/kubectl
      register: kubectl_stat

    - name: Remove kubectl if link
      become: true
      delegate_to: localhost
      run_once: true
      when: kubectl_stat.stat.islnk is defined and kubectl_stat.stat.islnk | bool
      ansible.builtin.file:
        path: /usr/bin/kubectl
        state: absent

    - name: Stat helm
      run_once: true
      ansible.builtin.stat:
        path: /usr/bin/helm
      register: helm_stat

    - name: Remove helm if link
      become: true
      run_once: true
      when: helm_stat.stat.islnk is defined and helm_stat.stat.islnk | bool
      ansible.builtin.file:
        path: /usr/bin/helm
        state: absent

    - name: Create cluster_admin config dir
      become: true
      ansible.builtin.file:
        path: "/home/{{ cluster_admin | default('root') }}/.kube"
        owner: "{{ cluster_admin | default('root') }}"
        group: "{{ cluster_admin_group | default('root') }}"
        state: directory
        mode: '0700'

- name: Configure .kube directory
  hosts: localhost
  connection: local
  tags: [config]
  gather_facts: true
  become: false

  tasks:
    - name: Create kube config dir
      ansible.builtin.file:
        path: "{{ lookup('ansible.builtin.env', 'HOME') }}/.kube"
        state: directory
        mode: '0700'


- name: Configure controller
  hosts: kube_control_plane
  tags: [sync]
  gather_facts: true
  become: true
  vars:
    _kube_config: "{{ lookup('ansible.builtin.env', 'HOME') }}/.kube/config.{{ cluster_name | d('k8s') }}"

  tasks:

    - name: Fetch config from master
      run_once: true
      ansible.builtin.fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ _kube_config }}"
        mode: '0600'
        flat: true

- name: Configure .kube/config
  hosts: localhost
  connection: local
  tags: [edit]
  gather_facts: true
  become: false
  vars:
    _kube_config: "{{ lookup('ansible.builtin.env', 'HOME') }}/.kube/config.{{ cluster_name | d('k8s') }}"

  tasks:
    - name: Configure k8s master
      ansible.builtin.lineinfile:
        path: "{{ _kube_config }}"
        regexp: '    server.*6443$'
        line: "    server: https://{{ hostvars[groups['kube_control_plane'][0]].ansible_host }}:6443"
        state: present
        mode: '0600'

    - name: Delete stale kube config
      ansible.builtin.file:
        path: "{{ lookup('ansible.builtin.env', 'HOME') }}/.kube/config"
        state: absent

    - name: "ln -s .kube/config.{{ cluster_name | d('k8s') }} .kube/config"
      ansible.builtin.file:
        src: "{{ lookup('ansible.builtin.env', 'HOME') }}/.kube/config.{{ cluster_name | d('k8s') }}"
        dest: "{{ lookup('ansible.builtin.env', 'HOME') }}/.kube/config"
        state: link

- name: Configure cluster_admin
  hosts: semaphore
  tags: [edit]
  gather_facts: true
  become: true

  tasks:
    - name: Configure cluster_admin
      when: cluster_admin is defined
      block:
        - name: Copy kube config to cluster_admin
          ansible.builtin.copy:
            remote_src: true
            src: "{{ lookup('ansible.builtin.env', 'HOME') }}/.kube/config.{{ cluster_name | d('k8s') }}"
            dest: "/home/{{ cluster_admin }}/.kube/config.{{ cluster_name | d('k8s') }}"
            owner: "{{ cluster_admin }}"
            mode: '0600'

        - name: Delete stale kube config
          ansible.builtin.file:
            path: "/home/{{ cluster_admin }}/.kube/config"
            state: absent

        - name: "ln -s .kube/config.{{ cluster_name | d('k8s') }} .kube/config"
          ansible.builtin.file:
            src: "/home/{{ cluster_admin }}/.kube/config.{{ cluster_name | d('k8s') }}"
            dest: "/home/{{ cluster_admin }}/.kube/config"
            state: link

        - name: Configure cluster_admin bash shell
          ansible.builtin.blockinfile:
            path: "/home/{{ cluster_admin }}/.bash_profile"
            owner: "{{ cluster_admin }}"
            mode: '0600'
            block: |
              source <(kubectl completion bash)
              alias k=kubectl
              alias kge="kubectl get events --all-namespaces --sort-by='.lastTimestamp'"
              complete -F __start_kubectl k

    - name: Get helm completion
      ansible.builtin.command: "/usr/local/bin/helm completion bash"
      changed_when: false
      register: helm_completion
      check_mode: false

    - name: Install helm completion
      ansible.builtin.copy:
        dest: /etc/bash_completion.d/helm.sh
        content: "{{ helm_completion.stdout }}"
        mode: '0755'
...
